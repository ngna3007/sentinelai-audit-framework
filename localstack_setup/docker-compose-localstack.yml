version: '3.8'

services:
  localstack:
    container_name: localstack-aws-auto-inventory
    image: localstack/localstack-pro:latest
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # External services port range
    environment:
      # Activate LocalStack Pro
      - LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN:?}
      
      # Core configuration
      - DEBUG=1
      - PERSISTENCE=1
      - LAMBDA_EXECUTOR=docker-reuse
      
      # Enable all services needed for PCI DSS compliance scanning
      - SERVICES=acm,acm-pca,apigateway,apigatewayv2,appconfig,appstream,athena,backup,cloudformation,cloudfront,cloudtrail,cloudwatch,codebuild,codepipeline,config,connect,controltower,detective,devops-guru,directconnect,dms,docdb,dynamodb,ec2,ecr,ecs,efs,eks,elasticache,elb,elbv2,emr,es,events,fis,guardduty,healthlake,iam,inspector,kafka,kinesis,kms,lambda,logs,macie2,mq,neptune,network-firewall,opensearch,organizations,ram,rds,redshift,route53,s3,sagemaker,secretsmanager,securityhub,ses,shield,sns,sqs,ssm,support,transfer,waf,wafv2,workmail,workspaces
      
      # Extensions for additional functionality
      - EXTENSION_AUTO_INSTALL=localstack-extension-mailhog
      
      # Performance optimizations
      - SKIP_INFRA_DOWNLOADS=1
      - DISABLE_EVENTS=0
      - ENABLE_CONFIG_UPDATES=1
      
      # Networking
      - MAIN_CONTAINER_NAME=localstack-aws-auto-inventory
      
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./localstack_volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./init-scripts:/etc/localstack/init/ready.d"  # Mount initialization scripts
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  default:
    name: localstack-network 