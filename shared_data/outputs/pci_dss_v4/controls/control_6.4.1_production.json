{
  "id": "60a0d802-0c9f-47f9-8c34-78f086ba6862",
  "control_id": "6.4.1",
  "chunk": "PCI DSS 4_0_1 Requirement Control 6.4.1 Defined Approach Requirements: For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: \u2013 At least once every 12 months and after significant changes. \u2013 By an entity that specializes in application security. \u2013 Including, at a minimum, all common software attacks in Requirement 6.2.4. \u2013 All vulnerabilities are ranked in accordance with requirement 6.3.1. \u2013 All vulnerabilities are corrected. \u2013 The application is re-evaluated after the corrections. OR Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: \u2013 Installed in front of public-facing web applications to detect and prevent web- based attacks. \u2013 Actively running and up to date as applicable. \u2013 Generating audit logs. \u2013 Configured to either block web-based attacks or generate an alert that is immediately investigated. Applicability Notes: This assessment is not the same as the vulnerability scans performed for Requirement 11.3.1 and 11.3.2. _This requirement will be superseded by_ _Requirement 6.4.2 after 31 March 2025 when_ _Requirement 6.4.2 becomes effective._ Testing Procedures: Testing Procedure 6.4.1: For public-facing web applications, ensure that either one of the required methods is in place as follows: If manual or automated vulnerability security assessment tools or methods are in use, examine documented processes, interview personnel, and examine records of application security assessments to verify that public- facing web applications are reviewed in accordance with all elements of this requirement specific to the tool/method. Guidance: Purpose: Public-facing web applications are those that are available to the public (not only for internal use). these applications are primary targets for attackers, and poorly coded web applications provide an easy path for attackers to gain access to sensitive data and systems. Examples: A web application firewall (waf) installed in front of public-facing web applications to check all traffic is an example of an automated technical solution that detects and prevents web-based attacks (for example, the attacks included in requirement 6.2.4). wafs filter and block non-essential traffic at the application layer. a properly configured waf helps to prevent application-layer attacks on applications that are improperly coded or configured. . Good Practice: Manual or automated vulnerability security assessment tools or methods review and/or test the application for vulnerabilities. common assessment tools include specialized web scanners that perform automatic analysis of web application protection. when using automated technical solutions, it is important to include processes that facilitate timely responses to alerts generated by the solutions so that any detected attacks can be mitigated.",
  "requirement": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: \u2013 At least once every 12 months and after significant changes. \u2013 By an entity that specializes in application security. \u2013 Including, at a minimum, all common software attacks in Requirement 6.2.4. \u2013 All vulnerabilities are ranked in accordance with requirement 6.3.1. \u2013 All vulnerabilities are corrected. \u2013 The application is re-evaluated after the corrections. OR Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: \u2013 Installed in front of public-facing web applications to detect and prevent web- based attacks. \u2013 Actively running and up to date as applicable. \u2013 Generating audit logs. \u2013 Configured to either block web-based attacks or generate an alert that is immediately investigated.",
  "metadata": {
    "control_id": "6.4.1",
    "standard": "PCI-DSS-v4.0",
    "source": "PCI_DSS_PDF_v4.0",
    "control_category": "secure_development",
    "has_testing_procedures": true,
    "requirements_id": "6"
  }
}