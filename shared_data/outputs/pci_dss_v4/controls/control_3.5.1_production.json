{
  "id": "2a636798-f405-42d0-bb71-8844c198645a",
  "control_id": "3.5.1",
  "chunk": "PCI DSS 4_0_1 Requirement Control 3.5.1 Defined Approach Requirements: PAN is rendered unreadable anywhere it is stored by using any of the following approaches: One-way hashes based on strong cryptography of the entire PAN. Truncation (hashing cannot be used to replace the truncated segment of PAN). \u2013 If hashed and truncated versions of the same PAN, or different truncation formats of the same PAN, are present in an environment, additional controls are in place such that the different versions cannot be correlated to reconstruct the original PAN. Index tokens. Strong cryptography with associated key- management processes and procedures. Customized Approach Objective: Cleartext PAN cannot be read from storage media. Applicability Notes: This requirement applies to PANs stored in primary storage (databases, or flat files such as text files spreadsheets) as well as non-primary storage (backup, audit logs, exception, or troubleshooting logs). This requirement does not preclude the use of temporary files containing cleartext PAN while encrypting and decrypting PAN. Testing Procedures: Testing Procedure 3.5.1.a: Examine documentation about the system used to render PAN unreadable, including the vendor, type of system/process, and the encryption algorithms (if applicable) to verify that the PAN is rendered unreadable using any of the methods specified in this requirement. Testing Procedure 3.5.1.b: Examine data repositories and audit logs, including payment application logs, to verify the PAN is rendered unreadable using any of the methods specified in this requirement. Testing Procedure 3.5.1.c: If hashed and truncated versions of the same PAN are present in the environment, examine implemented controls to verify that the hashed and truncated versions cannot be correlated to reconstruct the original PAN. Guidance: Purpose: Rendering stored pan unreadable is a defense in depth control designed to protect the data if an unauthorized individual gains access to stored data by taking advantage of a vulnerability or misconfiguration of an entity\u2019s primary access control. Good Practice: It is a relatively trivial effort for a malicious individual to reconstruct original pan data if they have access to both the truncated and hashed versions of a pan. controls that prevent the correlation of this data will help ensure that the original pan remains unreadable. implementing keyed cryptographic hashes with associated key management processes and procedures in accordance with requirement 3.5.1.1 is a valid additional control to prevent correlation. Further Information: For information about truncation formats and truncation in general, see pci ssc\u2019s faqs on the topic. sources for information about index tokens include: pci ssc\u2019s tokenization product security guidelines (_https://www.pcisecuritystandards.org/documents/t_ _okenization_product_security_guidelines.pdf_) _ansi x9.119-2-2017: retail financial services -_ _requirements for protection of sensitive payment_ _card data - part 2: implementing post-authorization_ _tokenization systems_.",
  "requirement": "PAN is rendered unreadable anywhere it is stored by using any of the following approaches: One-way hashes based on strong cryptography of the entire PAN. Truncation (hashing cannot be used to replace the truncated segment of PAN). \u2013 If hashed and truncated versions of the same PAN, or different truncation formats of the same PAN, are present in an environment, additional controls are in place such that the different versions cannot be correlated to reconstruct the original PAN. Index tokens. Strong cryptography with associated key- management processes and procedures.",
  "metadata": {
    "control_id": "3.5.1",
    "standard": "PCI-DSS-v4.0",
    "source": "PCI_DSS_PDF_v4.0",
    "control_category": "data_protection",
    "has_testing_procedures": true,
    "requirements_id": "3"
  }
}